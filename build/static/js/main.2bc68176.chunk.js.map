{"version":3,"sources":["Components/Header.js","Components/About.js","Components/Resume.js","Components/Contact.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","data","name","occupation","description","city","address","networks","social","map","network","href","url","target","rel","className","id","title","typing","About","profilepic","image","bio","street","state","zip","phone","email","src","alt","Resume","skillmessage","education","school","degree","graduated","work","company","years","skills","toLowerCase","style","width","level","Contact","useState","setName","setEmail","subject","setSubject","message","setMessage","contactName","contactEmail","contactMessage","contactmessage","submitForm","window","open","encodeURIComponent","onSubmit","htmlFor","type","defaultValue","value","size","onChange","e","cols","rows","onClick","App","resumeData","setResumeData","useEffect","fetch","then","res","json","main","resume","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2bc68176.chunk.js","sourcesContent":["import React from \"react\";\nimport TypeWriter from \"react-typewriter\";\n\nconst Header = ({ data }) => {\n  if (data) {\n    var name = data.name;\n    var occupation = data.occupation;\n    var description = data.description;\n    var city = data.address.city;\n    var networks = data.social.map(function (network) {\n      return (\n        <li key={network.name}>\n          <a href={network.url} target=\"_blank\" rel=\"noreferrer\">\n            <i className={network.className}></i>\n          </a>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <header id=\"home\">\n      <nav id=\"nav-wrap\">\n        <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n          Show navigation\n        </a>\n        <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n          Hide navigation\n        </a>\n\n        <ul id=\"nav\" className=\"nav\">\n          <li className=\"current\">\n            <a className=\"smoothscroll\" href=\"#home\">\n              Home\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#about\">\n              About\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#resume\">\n              Resume\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#contact\">\n              Contact\n            </a>\n          </li>\n          {/* <li>\n            <a className=\"smoothscroll\" href=\"#portfolio\">\n              Works\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#testimonials\">\n              Testimonials\n            </a>\n          </li> */}\n        </ul>\n      </nav>\n\n      <div className=\"row banner\">\n        <div className=\"banner-text\">\n          <h1 className=\"responsive-headline\">\n            <TypeWriter typing={0.5}>{name ? `I'm ${name}.` : null}</TypeWriter>\n          </h1>\n          <h3>\n            Based in {city}. <span>{occupation}</span>. {description}.\n          </h3>\n          <hr />\n          <ul className=\"social\">{networks}</ul>\n        </div>\n      </div>\n\n      <p className=\"scrolldown\">\n        <a className=\"smoothscroll\" href=\"#about\">\n          <i className=\"icon-down-circle\"></i>\n        </a>\n      </p>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst About = ({ data }) => {\n  if (data) {\n    var name = data.name;\n    var profilepic = \"images/\" + data.image;\n    var bio = data.bio;\n    var street = data.address.street;\n    var city = data.address.city;\n    var state = data.address.state;\n    var zip = data.address.zip;\n    var phone = data.phone;\n    var email = data.email;\n    // var resumeDownload = data.resumedownload;\n  }\n\n  return (\n    <section id=\"about\">\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <img\n            className=\"profile-pic\"\n            src={profilepic}\n            alt=\"Kush's Profile Pic\"\n          />\n        </div>\n        <div className=\"nine columns main-col\">\n          <h2>About Me</h2>\n\n          <p>{bio}</p>\n          <div className=\"row\">\n            <div className=\"columns contact-details\">\n              <h2>Contact Details</h2>\n              <p className=\"address\">\n                <span>{name}</span>\n                <br />\n                <span>\n                  {street}\n                  <br />\n                  {city} {state}, {zip}\n                </span>\n                <br />\n                <span>{phone}</span>\n                <br />\n                <span>{email}</span>\n              </p>\n            </div>\n            {/* <div className=\"columns download\">\n              <p>\n                <a href={resumeDownload} className=\"button\">\n                  <i className=\"fa fa-download\"></i>Download Resume\n                </a>\n              </p>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Resume = ({ data }) => {\n  if (data) {\n    var skillmessage = data.skillmessage;\n    var education = data.education.map(function (education) {\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree} <span>&bull;</span>\n            <em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}</p>\n        </div>\n      );\n    });\n    var work = data.work.map(function (work) {\n      return (\n        <div key={work.company}>\n          <h3>{work.company}</h3>\n          <p className=\"info\">\n            {work.title}\n            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n          </p>\n          <p>{work.description}</p>\n        </div>\n      );\n    });\n    var skills = data.skills.map(function (skills) {\n      var className = \"bar-expand \" + skills.name.toLowerCase();\n      return (\n        <li key={skills.name}>\n          <span style={{ width: skills.level }} className={className}></span>\n          <em>{skills.name}</em>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <section id=\"resume\">\n      <div className=\"row education\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Education</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <div className=\"row item\">\n            <div className=\"twelve columns\">{education}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row work\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Work</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">{work}</div>\n      </div>\n\n      <div className=\"row skill\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Skills</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <p>{skillmessage}</p>\n\n          <div className=\"bars\">\n            <ul className=\"skills\">{skills}</ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Resume;\n","import React, { useState } from \"react\";\n\nconst Contact = ({ data }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  if (data) {\n    var contactName = data.name;\n    var street = data.address.street;\n    var city = data.address.city;\n    var state = data.address.state;\n    var zip = data.address.zip;\n    var phone = data.phone;\n    var contactEmail = data.email;\n    var contactMessage = data.contactmessage;\n  }\n\n  const submitForm = () => {\n    window.open(\n      `mailto:${contactEmail}?subject=${encodeURIComponent(\n        subject\n      )}&body=${encodeURIComponent(name)} (${encodeURIComponent(\n        email\n      )}): ${encodeURIComponent(message)}`\n    );\n  };\n\n  return (\n    <section id=\"contact\">\n      <div className=\"row section-head\">\n        <div className=\"two columns header-col\">\n          <h1>\n            <span>Get In Touch.</span>\n          </h1>\n        </div>\n\n        <div className=\"ten columns\">\n          <p className=\"lead\">{contactMessage}</p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"eight columns\">\n          <form onSubmit={submitForm}>\n            <fieldset>\n              <div>\n                <label htmlFor=\"contactName\">\n                  Name <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={name}\n                  size=\"35\"\n                  id=\"contactName\"\n                  name=\"contactName\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactEmail\">\n                  Email <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={email}\n                  size=\"35\"\n                  id=\"contactEmail\"\n                  name=\"contactEmail\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactSubject\">Subject</label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={subject}\n                  size=\"35\"\n                  id=\"contactSubject\"\n                  name=\"contactSubject\"\n                  onChange={(e) => setSubject(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactMessage\">\n                  Message <span className=\"required\">*</span>\n                </label>\n                <textarea\n                  cols=\"50\"\n                  rows=\"15\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  id=\"contactMessage\"\n                  name=\"contactMessage\"\n                ></textarea>\n              </div>\n\n              <div>\n                <button onClick={submitForm} type=\"submit\" className=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </fieldset>\n          </form>\n\n          <div id=\"message-warning\"> Error boy</div>\n          <div id=\"message-success\">\n            <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n            <br />\n          </div>\n        </div>\n\n        <aside className=\"four columns footer-widgets\">\n          <div className=\"widget widget_contact\">\n            <h4>Address and Phone</h4>\n            <p className=\"address\">\n              {contactName}\n              <br />\n              {contactEmail}\n              <br />\n              <br />\n              {street} <br />\n              {city}, {state} {zip}\n              <br />\n              <span>{phone}</span>\n            </p>\n          </div>\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React, { useEffect, useState } from \"react\";\n\nimport Header from \"./Components/Header\";\n// import Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\n// import Testimonials from \"./Components/Testimonials\";\n// import Portfolio from \"./Components/Portfolio\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [resumeData, setResumeData] = useState({});\n\n  useEffect(() => {\n    fetch(\"/resumeData.json\")\n      .then((res) => res.json())\n      .then((data) => {\n        setResumeData(data);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header data={resumeData.main} />\n      <About data={resumeData.main} />\n      <Resume data={resumeData.resume} />\n      <Contact data={resumeData.main} />\n      {/* <Portfolio data={resumeData.portfolio} />\n      <Testimonials data={resumeData.testimonials} />\n      <Footer data={resumeData.main} /> */}\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}